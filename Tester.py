'''
' Tester code for Lab 01.
'''

from Vehicle import Vehicle
from Skateboard import Skateboard
from Helicopter import Helicopter

#I) Try to construct the Vehicle which should fail
print("I) Try to construct the Vehicle which should fail")
try:
	v1 = Vehicle(10, 25, (0,0), "NORTH")
	print("Vehcile is not abstract.")
except:
	print("GOOD NEWS! Vehicle is abstract!")
finally:
	print("--------------------------------")

#II) Test the inherited accessor methods of Vehicle in Skateboard
print("\nII) Test the inherited accessor methods of Vehicle in Skateboard")
v1 = Skateboard(25, (5,-3), "SOUTH")
print("3\t= " + str(v1.get_length()))
print("25\t= " + str(v1.get_top_speed()))
print("SOUTH\t= " + str(v1.get_direction  ()))
print("(5,-3)\t= " + str(v1.get_location()))
print("0\t= " + str(v1.get_current_speed()))

#III) Test the inherited turn_left method of Vehicle in Skateboard
print("\nIII) Test the inherited turn_left method of Vehicle in Skateboard")
v1.turn_left()
print("EAST\t= " + v1.get_direction())
v1.turn_left()
print("NORTH\t= " + v1.get_direction())
v1.turn_left()
print("WEST\t= " + v1.get_direction())
v1.turn_left()
print("SOUTH\t= " + v1.get_direction())

#IV) Test the inherited turn_right method of Vehicle in Skateboard
print("\nIV) Test the inherited turn_right method of Vehicle in Skateboard")
v1.turn_right()
print("WEST\t= " + v1.get_direction())
v1.turn_right()
print("NORTH\t= " + v1.get_direction())
v1.turn_right()
print("EAST\t= " + v1.get_direction())
v1.turn_right()
print("SOUTH\t= " + v1.get_direction())

#V) Test the accelerate and decelerate methods in Skateboard
print("\nV) Test the accelerate and decelerate methods in Skateboard")
v1.accelerate()
print(str((v1.get_top_speed()) / 2.0) + "\t= " + str(v1.get_current_speed()))
v1.accelerate()
print(str(v1.get_top_speed()) + "\t= " + str(v1.get_current_speed()))
v1.accelerate()
print(str(v1.get_top_speed()) + "\t= " + str(v1.get_current_speed()))
v1.decelerate()
print("0\t= " + str(v1.get_current_speed()))
v1.decelerate()
print("0\t= " + str(v1.get_current_speed()))

#VI) Test the inherited move method in Skateboard
print("\nVI) Test the inherited move method in Skateboard")
v1.move()
print("(5.0,-3.0)\t= " + str(v1.get_location()))
v1.accelerate()
v1.move()
print("(5.0,-15.5)\t= " + str(v1.get_location()))
v1.decelerate()
v1.turn_left()
v1.move()
print("(5.0,-15.5)\t= " + str(v1.get_location()))
v1.accelerate()
v1.turn_left()
v1.move()
print("(5.0,-3.0)\t= " + str(v1.get_location()))
v1.accelerate()
v1.accelerate()
v1.turn_right()
v1.move()
print("(30.0,-3)\t= " + str(v1.get_location()))
print("--------------------------------")

#VII) Test the inherited accessor methods of Vehicle in Helicopter
print("\nVII) Test the inherited accessor methods of Vehicle in Helicopter")
v1 = Helicopter(13, 25, (5,-3), "SOUTH", 0.3)
print("13\t\t= " + str(v1.get_length()))
print("25\t\t= " + str(v1.get_top_speed()))
print("SOUTH\t\t= " + str(v1.get_direction()))
print("(5.0,-3.0)\t= " + str(v1.get_location()))
print("0\t\t= " + str(v1.get_current_speed()))

#VIII) Test the newly declared pure accessor and mutator methods in Helicopter
print("\nVIII) Test the newly declared pure accessor and mutator methods in Helicopter")
print("0.3\t\t\t= " + str(v1.get_acceleration()))
print("0.0\t\t\t= " + str(v1.get_altitude()))
print("''\t\t\t= '" + str(v1.get_registration_number()) + "'")
v1.set_registration_number("HEY987")
print("HEY987\t\t\t= " + str(v1.get_registration_number()))
print("''\t\t\t= '" + str(v1.get_owner()) + "'")
v1.set_owner("Brian R. Grey, Esq.")
print("Brian R. Grey, Esq.\t= " + str(v1.get_owner()))

#IX) Test the accelerate method in Helicopter
print("\nIX) Test the accelerate method in Helicopter")
v1.accelerate()
print("7.5\t= " + str(v1.get_current_speed()))
v1.accelerate()
print("15.0\t= " + str(v1.get_current_speed()))
v1.accelerate()
print("22.5\t= " + str(v1.get_current_speed()))
v1.accelerate()
print("25.0\t= " + str(v1.get_current_speed()))
v1.accelerate()
print("25.0\t= " + str(v1.get_current_speed()))

#X) Test the decelerate method in Helicopter
print("\nX) Test the decelerate method in Helicopter")
v1.decelerate()
print("17.5\t= " + str(v1.get_current_speed()))
v1.decelerate()
print("10.0\t= " + str(v1.get_current_speed()))
v1.decelerate()
print("2.5\t= " + str(v1.get_current_speed()))
v1.decelerate()
print("0.0\t= " + str(v1.get_current_speed()))
v1.decelerate()
print("0.0\t= " + str(v1.get_current_speed()))

#XI) Test the overridden turn_left method of Vehicle in Helicopter
v1 = Helicopter(13, 25, (5,-3), "SOUTH", 0.2)
print("\nXI) Test the overridden turn_left method of Vehicle in Helicopter")
v1.accelerate()
v1.accelerate()
v1.accelerate()
v1.accelerate()
v1.accelerate()
v1.turn_left()
print("EAST\t\t= " + v1.get_direction())
print("(5.0,-28.0)\t= " + str(v1.get_location()))
v1.turn_left()
print("NORTH\t\t= " + v1.get_direction())
print("(30.0,-28.0)\t= " + str(v1.get_location()))
v1.turn_left()
print("WEST\t\t= " + v1.get_direction())
print("(30.0,-3.0)\t= " + str(v1.get_location()))
v1.turn_left()
print("SOUTH\t\t= " + v1.get_direction())
print("(5.0,-3.0)\t= " + str(v1.get_location()))

#XII) Test the overridden turn_right method of Vehicle in Helicopter
print("\nXII) Test the overridden turn_right method of Vehicle in Helicopter")
v1.decelerate()
v1.decelerate()
v1.turn_right()
print("WEST\t\t= " + v1.get_direction())
print("(5.0,-18.0)\t= " + str(v1.get_location()))
v1.turn_right()
print("NORTH\t\t= " + v1.get_direction())
print("(-10.0,-18.0)\t= " + str(v1.get_location()))
v1.turn_right()
print("EAST\t\t= " + v1.get_direction())
print("(-10.0,-3.0)\t= " + str(v1.get_location()))
v1.turn_right()
print("SOUTH\t\t= " + v1.get_direction())
print("(5.0,-3.0)\t= " + str(v1.get_location()))

#XIII) Test the inherited move method in Helicopter
print("\nXIII) Test the inherited move method in Helicopter")
v1 = Helicopter(13, 25, (5,-3), "SOUTH", 0.2)
v1.accelerate()
v1.move()
print("(5.0,-8.0)\t= " + str(v1.get_location()))
v1.accelerate()
v1.move()
print("(5.0,-18.0)\t= " + str(v1.get_location()))
v1.turn_left()
v1.move()
print("(15.0,-28.0)\t= " + str(v1.get_location()))
v1.accelerate()
v1.turn_left()
v1.move()
print("(30.0,-13.0)\t= " + str(v1.get_location()))
v1.turn_right()
v1.move()
print("(45.0,2.0)\t= " + str(v1.get_location()))

#XIV) Test the change_altitude method in Helicopter
print("\nXIII) Test the change_altitude method in Helicopter")
v1 = Helicopter(13, 25, (5,-3), "SOUTH", 0.2)
v1.change_altitude(3)
print("3.0\t\t= " + str(v1.get_altitude()))
v1.change_altitude(4.75)
print("7.75\t\t= " + str(v1.get_altitude()))
v1.change_altitude(-5)
print("2.75\t\t= " + str(v1.get_altitude()))
v1.change_altitude(-5)
print("0.0\t\t= " + str(v1.get_altitude()))
v1.accelerate()
v1.change_altitude(5)
print("5.0\t\t= " + str(v1.get_altitude()))
print("(5.0,-8.0)\t= " + str(v1.get_location()))
v1.accelerate()
v1.change_altitude(-1.25)
print("3.75\t\t= " + str(v1.get_altitude()))
print("(5.0,-18.0)\t= " + str(v1.get_location()))
v1.change_altitude(-0.5)
v1.turn_left()
v1.turn_left()
v1.move()
print("3.25\t\t= " + str(v1.get_altitude()))
print("(15.0,-28.0)\t= " + str(v1.get_location()))
v1.change_altitude(10)
v1.move()
print("13.25\t\t= " + str(v1.get_altitude()))
print("(15.0,-8.0)\t= " + str(v1.get_location()))
v1.decelerate()
v1.change_altitude(-1 * v1.get_altitude())
v1.decelerate()
print("0.0\t\t= " + str(v1.get_current_speed()))
print("0.0\t\t= " + str(v1.get_altitude()))
print("(15.0,-3.0)\t= " + str(v1.get_location()))

